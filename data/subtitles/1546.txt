 Сегодня я хочу поговорить о том,  чему мир открытых программ может научить демократию,  но перед этим — небольшая преамбула.  Начнём отсюда.  Это Марта Пейн. 9-летняя шотландская девочка  из области Аргайл и Бьют.  Пару месяцев назад Пейн начала вести блог о еде  под названием NeverSeconds. Каждый день  она брала с собой в школу фотоаппарат  и фотографировала еду.  Видите овощ? (Смех)  И, как это иногда случается,  у блога появились десятки читателей,  а потом — сотни, а потом — тысячи.  Люди следили за тем,  как Марта ставит рейтинги школьным обедам,  включая мою любимую категорию —  «число найденных волос». (Смех)  В этом обеде их не было. Хороший день.  15 дней назад она написала  сообщение с заголовком «Прощайте».  Она сказала: «Мне очень жаль,  но сегодня директор вызвал меня из класса и сказал,  что мне больше нельзя делать фотографии в столовой.  Мне было очень приятно вести этот блог.  Спасибо, что читали. Прощайте».  Вы уже догадались, что произошло дальше, правда? (Смех)  Ответная реакция была настолько быстрой, мощной и единодушной,  что совет Аргайла и Бьюта в тот же день  пошёл на попятную и сказал: «Мы бы никогда  не подвергли цензуре 9-летнего ребёнка». (Смех)  Не считая, конечно, этого утра. (Смех)  Возникает вопрос:  что вообще привело их к мысли,  что это сойдёт им с рук? (Смех)  Ответ? Вся история человечества до наших дней.  (Смех) Итак,  что происходит, когда информационная среда внезапно  начинает распространять множество новых идей?  Этот вопрос актуален не впервые.  Мы уже сталкивались с этим несколько раз  за последние столетия.  Когда изобрели телеграф, стало ясно,  что он глобализует новостную индустрию.  Что из этого следовало?  Очевидно: мир во всём мире.  Телевидение — среда, позволившая нам не просто слышать,  а видеть, видеть своими глазами вещи,  происходящие на другом конце света — что оно принесло нам?  Мир во всём мире. (Смех)  Телефон?  Правильно: мир во всём мире.  Прошу прощения за спойлеры, но мира не вышло. Пока.  Даже печатный станок  расценивался как средство распространения  католического господства в Европе.  Но вместо этого мы получили «95 тезисов» Мартина Лютера,  Реформацию и, как вы знаете,  Тридцатилетнюю войну.  Одну вещь эти все предсказания мира поняли верно:  когда в обществе начинает циркулировать  много новых идей, оно меняется.  В чём они полностью ошиблись, так это в том, что происходит дальше.  Чем больше идей витает в воздухе,  тем больше у каждого шансов с чем-нибудь не согласиться.  Больше медиа — больше споров.  Вот к чему приводят новые информационные среды.  И тем не менее, когда мы оглядываемся на появление печатного станка,  то вполне им довольны.  Мы одобряющее печать общество.  Как же это увязать?  Почему мы считаем хорошим то, что сопутствует разногласию?  Найти ответ, я считаю, могут помочь вот такие вещи.  Это обложка «Философских трудов»,  первого в истории научного журнала,  опубликованного в Англии в XVII веке.  Его авторами была группа людей,  называвших себя «Невидимая школа» —  команда натуралистов-философов, которые тогда  ещё не считали себя учёными.  Эта команда хотела повысить продуктивность  дискуссий между философами,  и для этого им понадобились две вещи.  Во-первых, прозрачность. Потребовался стандарт,  который бы говорил: если ты провёл эксперимент,  публикуй не только выводы,  но и описание самого эксперимента.  Если ты не скажешь, как ты это сделал, тебе не поверят.  Во-вторых, скорость.  Нужно было быстро синхронизировать  знания всех философов.  Иначе конструктивных дискуссий бы не вышло.  Печатный станок отлично подходил для этих целей,  а вот книга — нет. Книга слишком медленна.  Так что они изобрели научный журнал,  чтобы синхронизировать споры  во всём обществе учёных.  Научную революцию произвёл не печатный станок —  её произвели учёные,  но без станка как инструмента  у них бы ничего не получилось.  А что же мы? Что же наше поколение,  наша медиа-революция и интернет?  Пророчества о мире во всём мире? Есть. (Смех)  Больше споров? Десять из десяти. (Смех)  (Смех)  YouTube — просто золотая жила. (Смех)  Больше хороших споров? А вот это не факт.  Я изучаю социальные медиа, а значит,  в первом приближении, я смотрю, как люди спорят.  И если бы меня попросили выбрать  «Невидимую школу» нашего поколения,  которая старается направить новые средства во всеобщее благо  не ради споров, а ради хороших споров,  я бы назвал программистов открытого ПО.  Программирование — это трёхстороннее взаимодействие  между разработчиком, исходным кодом  и компьютером, который этот код исполняет. Однако компьютеры  настолько негибки в своём понимании инструкций,  что становится крайне тяжело написать  набор команд, который был бы ему понятен.  И это если код пишет один.  Если же программистов несколько,  и они работают над одним и тем же,  становится очень легко стереть работу товарища  или получить набор несовместимых команд,  от которых компьютер просто поперхнётся.  И чем больше программистов,  тем острее проблема.  В первом приближении, проблема управления  разработкой большого ПО — это вопрос о том,  как удержать этот социальный хаос в узде.  Стандартное решение такой проблемы существует уже несколько десятилетий  и заключается в использовании  «системы контроля версий».  Система эта делает именно то, на что намекает название:  хранит копию-образец кода  где-то на сервере.  Менять её могут лишь те программисты,  которым выданы специальные права на доступ,  и лишь в пределах того куска,  над которым они работают.  Когда люди рисуют диаграммы таких версий,  они всегда выглядят примерно так.  Видно, да? Иерархия.  Не нужно слишком сильно щуриться,  чтобы увидеть политические ограничения подобных систем.  Это феодализм: один владелец, много рабочих.  Это вполне подходит для коммерческого ПО.  Так выглядит Microsoft Office. Так выглядит Adobe Photoshop.  Корпорация владеет кодом,  программисты приходят и уходят.  Но появился один программист, который решил,  что так работать не стоит.  Его зовут Линус Торвальдс.  Торвальдс — самый известный разработчик открытого ПО в мире.  Он создал Linux. Очевидно, Торвальдс наблюдал за тем,  как мир открытого ПО справлялся с той же проблемой.  Центральное обещание открытого ПО —  любой имеет доступ ко всему коду в любое время,  что, конечно же, создаёт  угрозу того самого хаоса, который надо предупредить,  чтобы хоть что-нибудь работало.  В итоге большинство открытых проектов зажали нос  и нырнули в те же самые феодальные системы управления.  Но Торвальдс сказал: «Нет, я так делать не буду».  Его точка зрения была чёткой:  если ты берёшь инструмент, то соглашаешься  и на подходы к управлению, встроенные в этот инструмент,  а Торвальдс не хотел соглашаться на то,  что совершенно не соответствовало работе Linux-сообщества.  Чтобы вы лучше представили, каким важным  было это решение, вот карта  внутренних зависимостей Linux.  Каждая линия означает,  что одной части программы требуется для работы другая.  Крайне сложный и запутанный процесс.  Крайне сложная и запутанная программа,  однако же многие годы Торвальдс развивал её  не с помощью автоматических средств, а из почтового ящика.  Люди буквально отправляли ему письма с изменениями,  на которые все согласились, и он компоновал всё вручную.  Через 15 лет управления Linux и наблюдений за тем,  как работает сообщество, он сказал: «Я знаю,  как написать систему контроля версий для свободных людей».  Он назвал её Git. Git — это распределённый контроль версий.  У него два больших отличия  от традиционных систем.  Первая — он отвечает идеологическому обещанию  открытого ПО. Каждый, кто работает над проектом,  имеет доступ к любой части кода в любое время.  И когда люди рисуют диаграммы действия для Git,  они выглядят вот так.  Не нужно понимать, что означают кружки,  прямоугольники и стрелочки, чтобы увидеть здесь поддержку  гораздо более запутанных процессов,  чем при традиционном контроле версий.  Но большая запутанность приносит больший хаос,  и здесь вступает в дело второе нововведение.  Это скриншот GitHub, главного хостинга Git.  Каждый раз, когда программист использует Git  и делает хоть сколь-нибудь важное изменение —  создаёт новый файл, изменяет имеющийся,  объединяет два файла — Git ставит вот такую подпись.  Это длинная строка цифр и букв —  уникальный идентификатор, привязанный к каждому изменению  без какой-либо централизованной координации.  Все Git-системы генерируют номера одним и тем же способом,  благодаря чему подпись неразрывно и неизменно  связана со своим изменением.  Всё это приводит к следующему:  программист в Эдинбурге и программист в Энтеббе  могут оба взять копию одной и той же программы,  внести свои изменения, а затем объединить их,  даже несмотря на то, что перед этим  они и не догадывались о существовании друг друга.  Это кооперация без координации.  Это важное изменение.  Но я, конечно, рассказал вам это не для того, чтобы вы поняли, как здорово  для разработчиков открытого ПО иметь средство,  отвечающее их идеологии,  хотя это и правда здорово.  Я рассказал это из-за последствий,  которые это средство оказало на взаимодействие сообществ.  Как только Git дал возможность кооперировать без координации,  стали возникать необычайно большие  и комплексные сообщества.  Это график связей разработчиков Ruby,  открытого языка программирования,  причём каждая линия показывает связь между людьми —  это уже график людей, а не кода,  график человеческого взаимодействия  в рамках проекта,  и он совсем не похож на организационную диаграмму.  Он похож на хаотическую диаграмму — и тем не менее,  благодаря новым инструментам все эти люди  могут создавать что-то вместе.  Я считаю, есть две веские причины полагать,  что такой подход можно распространить  на демократию в целом и закон в частности.  Когда ты говоришь,  что нечто в интернете принесёт много пользы демократии,  то часто получаешь вот такую ответную реакцию.  (Музыка) (Смех)  В смысле: «Ты вот про эту штуку,  где коты поют? Вот эта штука  принесёт пользу обществу?»  На что я могу ответить: у поющих котов  есть одна особенность. Так было всегда.  И я имею в виду не «так было всегда с интернетом»,  а так было всегда с любой медиа-средой, без исключений.  Потребовалось немного времени  после появления печатного станка,  чтобы сообразить, что эротические рассказы — хорошая идея. (Смех)  Как только продавать книги стало экономически выгодно,  кто-то сразу же сказал: «Эй, а спорим, я знаю  что люди наверняка купят?» (Смех)  Но прошло 150 лет, прежде чем у людей проскочила мысль  о научном журнале. И... (Смех) (Аплодисменты)  И момент, когда «Невидимая школа» взяла  печатный станок и сделала на нём научный журнал,  был феноменально важным, но он не гремел на весь мир,  он не случился сразу, и он не случился быстро.  И если вы хотите найти предпосылки настоящих изменений,  нужно искать по краям.  В законе тоже множество зависимостей.  Это график связей в налоговом кодексе США,  связей между законами, которые влияют друг на друга  и на общий свод правил.  Очень похоже на площадку управления исходным кодом.  Кроме того, закон — ещё одна область,  где существует множество мнений,  которые приходится сводить в одну каноническую копию.  И если вы зайдёте на GitHub, то увидите  миллионы и миллионы проектов,  подавляющее большинство которых — код,  но если поискать по окраинам, вы заметите и людей,  которые экспериментируют с политическим применением  подобной системы.  Кто-то выложил все дипломатические телеграммы  из WikiLeaks вместе с программами  для их расшифровки и обработки,  включая мою любимую программу, которая  находит хайку в прозе Государственного департамента.  (Смех)  Так-то. (Смех)  Сенат Нью-Йорка запустил вещь под названием  «Открытое законодательство», тоже на GitHub  и тоже из-за его гибкости и простоты обновления.  Вы можете выбрать своего Сенатора и посмотреть  список законопроектов, которые он поддержал.  Некто под ником Divegeek выложил кодексы Юты —  законы штата Юта — и выложил не просто  для распространения,  а с учётом очень интересной возможности,  которая может улучшить развитие законодательства.  Кто-то создал проект во время прошлогодних дебатов в Сенате  по поводу авторского права, сказав: «Очень странно, что Голливуду  добраться до канадских сенаторов проще,  чем канадским гражданам. Почему бы не использовать GitHub  и не показать им, как мог бы выглядеть законопроект за авторством народа?»  Этот проект включает очень выразительный скриншот.  Окно справа называется «diff».  Оно показывает для коллективно созданного текста,  кто, когда и какое  внёс изменение.  Красные строчки — это то, что удалили,  зелёные — то, что недавно добавили.  Программисты принимают такие вещи за данность,  но ни одно демократическое государство в мире не предоставляет  такой услуги своим гражданам, будь то законопроекты или бюджет,  несмотря на то, что все эти вещи  делаются с нашего согласия и на наши деньги.  И я бы хотел сказать вам, что,  раз программисты придумали распределённый,  масштабируемый, дешёвый и отвечающий идеалам демократии  метод взаимодействия, я бы хотел сказать, что,  раз у нас есть все средства,  изменения неизбежны. Но это не так.  Часть проблемы — это, конечно, простая нехватка информации.  Кто-то задал на Quora вопрос:  «Почему законодатели не пользуются  распределённым контролем версий?»  Вот графический ответ. (Смех)  (Смех) (Аплодисменты)  И это действительно проблема, но лишь частично.  Другая серьёзная проблема — это, конечно, власть.  Люди, которые экспериментируют с кооперацией, не имеют  законодательной власти, а люди, которые имеют  законодательную власть, не экспериментируют с кооперацией.  Они экспериментируют с прозрачностью.  Демократия просто не имеет права называться демократией,  если она не пытается быть прозрачной,  но прозрачность — это открытость лишь в одну сторону,  и приборная панель без руля — это не то,  что демократия обещает людям.  Так что подумайте вот о чём.  Записи Марты Пейн стали доступны публике  благодаря технологии,  но удержать их на месте помогла политическая воля.  Ожидание со стороны людей того,  что Марту не подвергнут цензуре.  Вот в каком состоянии находятся наши инструменты взаимодействия.  Они есть. Мы их видели. Всё работает.  Будем ли использовать?  Будем ли применять здесь то, что работает там?  Томас Элиот однажды сказал: «Одно из самых знаменательных событий,  которое может произойти с культурой, —  это появление новой формы прозы».  Я не согласен, но... (Смех)  Я согласен, если заменить «прозу» на «спор».  С культурой происходят удивительные вещи,  если она получает новую форму для обсуждений и дискуссий:  суд присяжных, голосование, экспертиза, и теперь это.  Новая форма споров появилась в нашем поколении —  точнее, всего за последние 10 лет.  Большая, распределённая, дешёвая  и совместимая с идеалами демократии.  Вопрос в том, оставим ли мы её  одним программистам?  Или же попытаемся применить на благо  общества в целом?  Спасибо за внимание. (Аплодисменты)  (Аплодисменты)  Спасибо. Спасибо. (Аплодисменты)  